<div class="weekends-wrapper">
  <div class="weekends-container">
    <div class="row" id="weekends-container-row">
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <%= render 'shared/loading_card' %>
      <div class="loading-card"></div>
    </div>
  </div>
</div>

<div class="filter-container">
  <div class="filter-form">
    <div class="row">
      <%= form_tag weekends_path, method: :get do%>
      <div class="environment col-sm-12 col-md-6">
        <div class="day-dropdown">
          <%= select_tag 'go_day', options_for_select(@go_days, params[:go_day]) ,{:class => 'format-button-filter'}%>
        </div>
        <div id="time-range">
          <p>Time range: <span class="slider-time" data-go-time-from-minutes="<%= @go_time_from_minutes %>">
            <% if params[:go_time_from] %>
            <%= params[:go_time_from] %>
            <% else %>
            6:00 PM
            <% end %>
          </span> -
          <span  class="slider-time2" data-go-time-to-minutes="<%= @go_time_to_minutes %>">
            <% if params[:go_time_to] %>
            <%= params[:go_time_to] %>
            <% else %>
            11:59 PM
            <% end %>
          </span>
        </p>
        <div class="sliders_step1">
          <div id="slider-range"></div>
        </div>
      </div>
      <%= hidden_field_tag 'go_time_from', '', id: "go_time_from"%>
      <%= hidden_field_tag 'go_time_to', '', id: "go_time_to"%>

    </div>
    <div class="environment col-sm-12 col-md-6">
      <div class="day-dropdown">
        <%= select_tag 'return_day', options_for_select(@return_days, params[:return_day]) ,{:class => 'format-button-filter'}%>
      </div>
      <div id="time-range">
        <p>Time range: <span class="return-slider-time" data-return-time-from-minutes="<%= @return_time_from_minutes %>">
          <% if params[:return_time_from] %>
          <%= params[:return_time_from] %>
          <% else %>
          6:00 PM
          <% end %>
        </span> -
        <span  class="return-slider-time2" data-return-time-to-minutes="<%= @return_time_to_minutes %>">
          <% if params[:return_time_to] %>
          <%= params[:return_time_to] %>
          <% else %>
          11:59 PM
          <% end %>
        </span>
      </p>
      <div class="sliders_step1">
        <div id="return-slider-range"></div>
      </div>
    </div>
    <%= hidden_field_tag 'return_time_from', '', id: "return_time_from"%>
    <%= hidden_field_tag 'return_time_to', '', id: "return_time_to"%>
  </div>
  <!--  Sauvegarde des params des villes de depart et d'arrivee -->
  <%= hidden_field_tag :code_from, @code_from %>
  <%= hidden_field_tag :code_to, @code_to %>
  <%= hidden_field_tag :format, @format %>
  </div>
  <%= submit_tag "filtrer", class: "research-button filter" %>
  <% end %>
</div>
</div>

<!-- Ajout des cards weekend (action cable) -->
<% content_for(:after_js) do %>
<script>
  // On s'inscrit au channel weekend lié à notre request
  App.cable.subscriptions.create(
    { channel: 'WeekendsChannel', request_id: "<%= @request_id %>" },
    // Dès qu'on reçoit une card weekend sur ce channel
    {
      received: (data) => {
        // On supprime la première loading card
        document.querySelector(".loading-card").remove();
        // On insère la card weekend juste avant la loading card suivante
        loading_card = document.querySelector(".loading-card")
        loading_card.insertAdjacentHTML('beforebegin', data.content);
        // On fait apparaitre la card weekend receptionné en lui ajoutant une class visible
        cards = document.querySelectorAll('.card-header');
        card = cards[cards.length - 1].parentNode;
        card.classList.remove("card-col-invisible");
        card.classList.add("card-col-visible");

        // Nécessaire à la wish list
        const authToken = document.querySelector('meta[name="csrf-token"]').content;
        document.querySelectorAll('.new_bookmark input[name="authenticity_token"]').forEach((input) => {
          input.value = authToken;
        });
      }
    }
  );
</script>
<% end %>

